{
  "version": 3,
  "sources": ["../ts/dropdown.ts"],
  "sourcesContent": ["// document.addEventListener(\"DOMContentLoaded\", () => {\n//   document.querySelectorAll(\".dropdown\").forEach((button) => {\n//     button.addEventListener(\"click\", () => {\n//       console.log(\"Hello, MOM!\");\n//     });\n//   });\n// });\n\ninterface DropdownDisplayTextOptionsInterface {\n  [key: number]: string;\n}\n\nclass Dropdown {\n  public dropdown_display_text: HTMLElement | null;\n  public dropdown_view: HTMLElement | null;\n  public dropdown_arrow: HTMLElement | null;\n  private dropdown_display_text_options: DropdownDisplayTextOptionsInterface;\n\n  constructor(\n    public element: HTMLElement | null,\n    public isDropdownOpen: boolean = false\n  ) {\n    this.isDropdownOpen = isDropdownOpen;\n    this.element = element;\n    this.dropdown_display_text =\n      element?.querySelector(\".dropdown_display_text\") ?? null;\n    this.dropdown_view = element?.querySelector(\".dropdown_view\") ?? null;\n    this.dropdown_arrow = element?.querySelector(\".dropdown_arrow\") ?? null;\n\n    this.dropdown_display_text_options = { 0: \"Choose...\" };\n    this.changeDropdownDisplayText(0, \"Choose...\");\n  }\n\n  updateDropdownState() {\n    if (!this.dropdown_view) return;\n\n    this.isDropdownOpen = !this.isDropdownOpen;\n    this.dropdown_view.style.display =\n      this.dropdown_view.style.display === \"none\" ? \"flex\" : \"none\";\n  }\n\n  changeDropdownDisplayText(position: number, name: string) {\n    if (this.dropdown_display_text === null) return;\n\n    this.dropdown_display_text_options[position] = name;\n    this.updateDropdownDisplayText();\n  }\n\n  updateDropdownDisplayText() {\n    if (this.dropdown_display_text === null) return;\n\n    this.dropdown_display_text.textContent = Object.keys(\n      this.dropdown_display_text_options\n    )\n      .map(Number)\n      .sort((a, b) => a - b)\n      .map((key) => this.dropdown_display_text_options[key])\n      .join(\" | \");\n  }\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  document.querySelectorAll<HTMLElement>(\".dropdown\").forEach((dropdown) => {\n    const dropdown_container = new Dropdown(dropdown);\n\n    dropdown_container.dropdown_view!.addEventListener(\"click\", (event) => {\n      if (event.target === event.currentTarget) {\n        dropdown_container.updateDropdownState();\n      }\n    });\n\n    dropdown_container.element!.addEventListener(\"click\", (event) => {\n      if (event.target === event.currentTarget) {\n        dropdown_container.updateDropdownState();\n      }\n    });\n\n    dropdown_container.dropdown_display_text!.addEventListener(\n      \"click\",\n      (event) => {\n        if (event.target === event.currentTarget) {\n          dropdown_container.updateDropdownState();\n        }\n      }\n    );\n\n    dropdown_container.dropdown_arrow!.addEventListener(\"click\", (event) => {\n      if (event.target === event.currentTarget) {\n        dropdown_container.updateDropdownState();\n      }\n    });\n\n    document.addEventListener(\"click\", (event) => {\n      if (!dropdown_container.element) return;\n\n      if (\n        !dropdown?.contains(event.target as Node) &&\n        dropdown_container.isDropdownOpen\n      ) {\n        dropdown_container.updateDropdownState();\n      }\n    });\n\n    dropdown_container\n      .dropdown_view!.querySelectorAll<HTMLElement>(\".dropdown_section\")\n      .forEach((section, section_index) => {\n        const options = section.querySelectorAll<HTMLElement>(\n          \".dropdown_section_option\"\n        );\n\n        options.forEach((option) => {\n          option.addEventListener(\"click\", () => {\n            options.forEach(\n              (option) =>\n                (option.style.backgroundColor = \"oklch(27.8% 0.033 256.848)\")\n            );\n\n            option.style.backgroundColor = \"oklch(55.1% 0.027 264.364 / 0.5)\";\n            dropdown_container.changeDropdownDisplayText(\n              section_index,\n              option.textContent.trim()\n            );\n          });\n        });\n      });\n  });\n});\n"],
  "mappings": ";AAYA,IAAM,WAAN,MAAe;AAAA,EAMb,YACS,SACA,iBAA0B,OACjC;AAFO;AACA;AAEP,SAAK,iBAAiB;AACtB,SAAK,UAAU;AACf,SAAK,wBACH,SAAS,cAAc,wBAAwB,KAAK;AACtD,SAAK,gBAAgB,SAAS,cAAc,gBAAgB,KAAK;AACjE,SAAK,iBAAiB,SAAS,cAAc,iBAAiB,KAAK;AAEnE,SAAK,gCAAgC,EAAE,GAAG,YAAY;AACtD,SAAK,0BAA0B,GAAG,WAAW;AAAA,EAC/C;AAAA,EAlBO;AAAA,EACA;AAAA,EACA;AAAA,EACC;AAAA,EAiBR,sBAAsB;AACpB,QAAI,CAAC,KAAK,cAAe;AAEzB,SAAK,iBAAiB,CAAC,KAAK;AAC5B,SAAK,cAAc,MAAM,UACvB,KAAK,cAAc,MAAM,YAAY,SAAS,SAAS;AAAA,EAC3D;AAAA,EAEA,0BAA0B,UAAkB,MAAc;AACxD,QAAI,KAAK,0BAA0B,KAAM;AAEzC,SAAK,8BAA8B,QAAQ,IAAI;AAC/C,SAAK,0BAA0B;AAAA,EACjC;AAAA,EAEA,4BAA4B;AAC1B,QAAI,KAAK,0BAA0B,KAAM;AAEzC,SAAK,sBAAsB,cAAc,OAAO;AAAA,MAC9C,KAAK;AAAA,IACP,EACG,IAAI,MAAM,EACV,KAAK,CAAC,GAAG,MAAM,IAAI,CAAC,EACpB,IAAI,CAAC,QAAQ,KAAK,8BAA8B,GAAG,CAAC,EACpD,KAAK,KAAK;AAAA,EACf;AACF;AAEA,SAAS,iBAAiB,oBAAoB,MAAM;AAClD,WAAS,iBAA8B,WAAW,EAAE,QAAQ,CAAC,aAAa;AACxE,UAAM,qBAAqB,IAAI,SAAS,QAAQ;AAEhD,uBAAmB,cAAe,iBAAiB,SAAS,CAAC,UAAU;AACrE,UAAI,MAAM,WAAW,MAAM,eAAe;AACxC,2BAAmB,oBAAoB;AAAA,MACzC;AAAA,IACF,CAAC;AAED,uBAAmB,QAAS,iBAAiB,SAAS,CAAC,UAAU;AAC/D,UAAI,MAAM,WAAW,MAAM,eAAe;AACxC,2BAAmB,oBAAoB;AAAA,MACzC;AAAA,IACF,CAAC;AAED,uBAAmB,sBAAuB;AAAA,MACxC;AAAA,MACA,CAAC,UAAU;AACT,YAAI,MAAM,WAAW,MAAM,eAAe;AACxC,6BAAmB,oBAAoB;AAAA,QACzC;AAAA,MACF;AAAA,IACF;AAEA,uBAAmB,eAAgB,iBAAiB,SAAS,CAAC,UAAU;AACtE,UAAI,MAAM,WAAW,MAAM,eAAe;AACxC,2BAAmB,oBAAoB;AAAA,MACzC;AAAA,IACF,CAAC;AAED,aAAS,iBAAiB,SAAS,CAAC,UAAU;AAC5C,UAAI,CAAC,mBAAmB,QAAS;AAEjC,UACE,CAAC,UAAU,SAAS,MAAM,MAAc,KACxC,mBAAmB,gBACnB;AACA,2BAAmB,oBAAoB;AAAA,MACzC;AAAA,IACF,CAAC;AAED,uBACG,cAAe,iBAA8B,mBAAmB,EAChE,QAAQ,CAAC,SAAS,kBAAkB;AACnC,YAAM,UAAU,QAAQ;AAAA,QACtB;AAAA,MACF;AAEA,cAAQ,QAAQ,CAAC,WAAW;AAC1B,eAAO,iBAAiB,SAAS,MAAM;AACrC,kBAAQ;AAAA,YACN,CAACA,YACEA,QAAO,MAAM,kBAAkB;AAAA,UACpC;AAEA,iBAAO,MAAM,kBAAkB;AAC/B,6BAAmB;AAAA,YACjB;AAAA,YACA,OAAO,YAAY,KAAK;AAAA,UAC1B;AAAA,QACF,CAAC;AAAA,MACH,CAAC;AAAA,IACH,CAAC;AAAA,EACL,CAAC;AACH,CAAC;",
  "names": ["option"]
}
